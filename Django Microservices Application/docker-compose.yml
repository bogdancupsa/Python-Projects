version: '2.1'

services:
  redis:
    image: redis:alpine
    container_name: chat_redis
    ports:
      - '6379:6379'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  user:
    build:
      context: .
      dockerfile: ./user_app/user_app/Dockerfile
    container_name: user
    ports:
      - '8000:8000'
    volumes:
      - ./user_app/user_app:/code
    networks:
      - app-network

  device:
    build:
      context: .
      dockerfile: ./device_app/device_app/Dockerfile
    container_name: device
    ports:
      - '8012:8012'
    volumes:
      - ./device_app/device_app/:/code
    command: python -m main.rabbit_mq
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=device_app.settings
      

  frontend:
    build:
      context: .
      dockerfile: ./frontend_app/frontend_app/Dockerfile
    container_name: frontend
    ports:
      - '80:80'
    volumes:
      - ./frontend_app/frontend_app:/app
    networks:
      - app-network

  chat:
    build:
      context: .
      dockerfile: ./chat_app/chat_app/Dockerfile
    container_name: chat
    ports:
      - '8024:8024'
    volumes:
      - ./chat_app/chat_app:/code
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=chat_app.settings
      - REDIS_HOST=redis
    networks:
      - app-network

  monitoring:
    build:
      context: .
      dockerfile: ./monitoring_app/monitoring_app/Dockerfile
    container_name: monitoring
    ports:
      - '8036:8036'
    volumes:
      - ./monitoring_app/monitoring_app:/code
    command: python -m main.rabbitmq_consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=monitoring_app.settings
      - REDIS_HOST=redis
    networks:
      - app-network
  
  desktop:
    build:
      context: ./desktop_app
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  app-network:
    driver: bridge


